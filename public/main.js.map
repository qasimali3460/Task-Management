{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/crdu.service.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-todo> </app-todo>\\n\\n\\n\\n\\n<!-- <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row header-section\\\">\\n        <span>Angular 4/5 Nodejs File Upload Download Sample</span>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-2\\\"></div>\\n        <div class=\\\"col-md-8\\\">\\n            <div class=\\\"row card\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                    <h4>Upload Section</h4>\\n                    <div id=\\\"fileSelector\\\">\\n                        <input type=\\\"file\\\" name=\\\"fileUplaod\\\" id=\\\"fileUpload\\\"\\n                        >\\n                    </div>\\n                    <div>\\n                        <div class=\\\"row uploadList\\\" >\\n                            <div class=\\\"col-sm-4\\\"></div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <div class=\\\"progress\\\">\\n                                    <div class=\\\"progress-bar bg-success\\\" \\n                                    [ngStyle]=\\\"\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-dark\\\" (click)=\\\"item.upload()\\\">Upload</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"item.remove()\\\">Cancel</button>\\n                            </div>\\n                        </div>                        \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"uploader.uploadAll()\\\">Upload All</button>\\n                    </div>\\n                </div>                \\n            </div>\\n\\n            <div class=\\\"row card\\\">\\n                <h4>Download Section</h4>\\n\\n                <div class=\\\"row\\\" >\\n                style=\\\"margin:10px;padding:5px;background-color:rgb(231, 229, 229); border-radius:5px; line-height:40px;\\\">\\n                    <div class=\\\"col-sm-7\\\"></div>\\n                    <div class=\\\"col-sm-5\\\" style=\\\"text-align:center;\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"download(i)\\\">Download</button></div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-2\\\"></div>\\n    </div>\\n</div> -->\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo/todo.component';\nimport {HttpClientModule} from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrduService {\n\n  constructor(private http:HttpClient) { }\n  addNewTask(data)\n  {\n    console.log(\"Data Got is \"+data);\n  \n    return this.http.post(\"http://localhost:3000/todo\",{\"description\":data});\n  }\n  getData()\n  {\n    return this.http.get(\"http://localhost:3000/todo\");\n  }\n  complete(data)\n  {\n    console.log(\"I Also got this\"+data);\n    let id={\"_id\":data};\n    return this.http.delete(\"http://localhost:3000/todo/\"+data);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG9kby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"margin-top:20px;\\\">\\n  <h3>Socket.IO MEAN app</h3>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-4 col-md-offset-2 \\\">\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" #task>\\n    </div>\\n    <div class=\\\"\\\">\\n      <input type=\\\"button\\\" class=\\\"btn btn-primary col-md-2 col-sm-1\\\" value=\\\"Add\\\" (click)=\\\"addToDo(task.value)\\\">\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\" *ngFor=\\\"let todo of toDoList;let idx = index\\\">\\n          <div class=\\\"card\\\" style=\\\"background-color:aliceblue; border: 0.1px solid rgb(185, 185, 185); margin-top:10px; padding:20px;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">Task {{idx+1}}</h4>\\n                <p class=\\\"card-text\\\">{{todo.description}}</p>\\n                <button  class=\\\"btn btn-primary \\\" style=\\\"\\\" (click)=\\\"finished(todo._id)\\\">Complete</button>\\n              </div>\\n            </div>\\n      </div>\\n    </div>\\n</div>\"","import { CrduService } from './../crdu.service';\nimport { Component, OnInit } from '@angular/core';\nimport  io from 'socket.io-client';\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit {\n  socket;\n  toDoList:any;\n  M:any;\n  constructor(private http:CrduService) { \n    this.socket=io('ws://localhost:3000');\n  }\n\n  ngOnInit() {\n    this.refresh();\n    this.socket.on('newTaskAdded',() => {\n      this.refresh();\n    });\n  }\n  \n  addToDo(data){\n    console.log(data);\n    this.http.addNewTask(data).subscribe((doc) => {\n      // this.openSnackBar(\"New Task Added Successfully\");\n      console.log(doc);\n    });\n    // this.toDoList.push(data);\n  }\n  refresh()\n  {\n    this.http.getData().subscribe(res => {\n      this.toDoList=res;\n    })\n  }\n  finished(data)\n  { \n    this.http.complete(data).subscribe(doc => {\n      // console.log(\"Got Response\"+JSON.stringify(doc));\n    });\n    // this.openSnackBar(\"Task Completed Successfully\");\n    // M.toast({html: 'I am a toast!'})\n    \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}